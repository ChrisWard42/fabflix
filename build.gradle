// Special Buildscript Plugins
buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.2.2'   
    }
}

// Gradle Plugins
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'com.bmuschko.cargo'

// Repositories to look for dependencies
repositories {
    mavenLocal()
    mavenCentral()
}

// Wrapper task to generate ./gradlew
wrapper {
    gradleVersion = '2.12'
}

// JDK Version (from java plugin)
sourceCompatibility = 1.8

// Project Version (project property)
version = '1.0'

// Extra Properties (defined in gradle.properties so don't shadow cmd line)
/*
ext {
    wAN = "fabflix"
}
*/

// War file name
war {
    archiveName = wAN + ".war"
}

// Dependencies to run Cargo
dependencies {
    def cargoVersion = '1.4.5'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
          "org.codehaus.cargo:cargo-ant:$cargoVersion"
}

// Web app deployment (use with: cDR, cRR)
cargo {
    containerId = 'tomcat7x'
    port = 8080
    
    deployable {
        file = file("build/libs/" + wAN + ".war")
        context = wAN
    }
    
    remote {
        hostname = '50.18.81.254'
        username = 'build'
        password = 'detectivemcnulters'
    }
}

// Cleanup task to remove old build files so no accidental deploy of outdated stuff
task cleanWars(type: Delete) {
    delete "build"
}

// Task to check that we aren't quick deploying to live site
task checkLiveSite() << {
    if(project.property("wAN").toString().equals("live_site")) {
        throw new GradleException("Build failed. Do not run quick deploy on live site.")
    }
}

// Macro to run assemble, redeploy, and cleanup all in a row
task webAppDeploy(dependsOn: ['checkLiveSite', 'assemble', 'cargoRedeployRemote', 'cleanWars'])
assemble.mustRunAfter 'checkLiveSite'
cargoRedeployRemote.mustRunAfter 'assemble'
cleanWars.mustRunAfter 'cargoRedeployRemote'