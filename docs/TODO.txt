===============================
========== TODO List ==========
===============================

General
	-
	
Ben
	- Design frontend interface for the pages as defined in: https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2016-spring-project2#StepbyStep
	- 
	
Chris
	- Establish URL and Parameter naming guidelines and outline in docs/URLSchema.txt
	- Define servlet and jsp interactions for each discrete page in web.xml (Session example is good)
	- Integration of frontend and backend components through JSP variables
	
Stephen
	- Write java servlet classes for the pages as defined in: https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2016-spring-project2#StepbyStep
	- Write java classes for data representation (Movie, Star, etc.)
	
Submission
	- 


==========================
========== DONE ==========
==========================

Ben
	-

Chris
	- Configured AWS Server to utilize Elastic IP address and reconfigured Gateways and Routing Tables
	- Configured server port redirection ghosting 8080 as default port
	- Setup Skeddly rolling AWS EC2 instance backups
	- Created and populated docs/Technologies.txt filled with links to useful libraries and resources
	- Designed project workflow after researching Git models as outlined in docs/Workflow.txt
	- Deployed all of the testing applications to AWS Tomcat and configured them
	- Debugged Tomcat Manager JVM version mismatches and applied fixes
	- Installed Gradle build system on AWS and setup config and environment files for all users
	- Created first iteration of Gradle build script to automatically deploy Tomcat web apps remotely
	- Modified docs/Workflow.txt to incorporate Gradle build commands into process
	- Made the build.gradle script more robust with live and test webapps via parameters on command line
	- Outlined page design and functionality for each page in docs/Design.txt
	- Refactored project structure to provide better servlet functionality encapsulation
	- Wrote Java bean classes for each of the tables in the DB schema

Stephen
	-